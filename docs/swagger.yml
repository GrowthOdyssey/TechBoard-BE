openapi: 3.0.0

info:
  version: 1.0.0
  title: TechBoard API

tags:
  - name: HealthCheck
    description: ヘルスチェック
  - name: User
    description: ユーザー
  - name: Article
    description: 記事
  - name: Board
    description: 掲示板

servers:
  - url: http://localhost:7280
    description: local server
  - url: http://127.0.0.1:4010
    description: mock server

paths:
  /health_check:
    get:
      tags:
        - HealthCheck
      summary: ヘルスチェック
      description: APIサーバの稼働状況を確認する。
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: ステータス
                    example: OK
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/users:
    post:
      tags:
        - User
      summary: ユーザー登録
      description: ユーザーを登録する。
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signupRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response422"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

    get:
      tags:
        - User
      summary: ユーザー情報取得
      description: ユーザー情報を取得する。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/users/login:
    post:
      tags:
        - User
      summary: ログイン
      description: ログインを行う。
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/users/logout:
    delete:
      tags:
        - User
      summary: ログアウト
      description: ログアウトを行う。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/articles:
    get:
      tags:
        - Article
      summary: 記事一覧取得
      description: 記事一覧を取得する
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: string
            description: ユーザーID
            example: "1"
        - name: page
          in: query
          required: true
          schema:
            type: integer
            description: ページ番号
            example: 1
        - name: perPage
          in: query
          required: true
          schema:
            type: integer
            description: 1ページあたりの件数
            example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articlesListGetResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

    post:
      tags:
        - Article
      summary: 記事作成
      description: 記事を作成する。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/articlesPostRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articlesPostResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response422"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/articles/{articleId}:
    get:
      tags:
        - Article
      summary: 記事取得
      description: 記事1件の詳細情報を取得する。
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            description: 記事ID
            example: "1"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articlesGetResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

    put:
      tags:
        - Article
      summary: 記事更新
      description: 記事を更新する。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/articlesPutRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articlesPutResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response422"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

    delete:
      tags:
        - Article
      summary: 記事削除
      description: 記事を削除する。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
        - name: articleId
          in: path
          required: true
          schema:
            type: string
            description: 記事ID
            example: "1"
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/threads:
    get:
      tags:
        - Board
      summary: スレッド一覧取得
      description: スレッドの一覧を取得する。
      parameters:
        - name: categoryId
          in: query
          required: false
          schema:
            type: string
            description: カテゴリID
            example: "1"
        - name: page
          in: query
          required: true
          schema:
            type: integer
            description: ページ番号
            example: 1
        - name: perPage
          in: query
          required: true
          schema:
            type: integer
            description: 1ページあたりの件数
            example: 20
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadsListGetResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

    post:
      tags:
        - Board
      summary: スレッド作成
      description: スレッドを作成する。
      parameters:
        - name: accessToken
          in: header
          required: true
          schema:
            type: string
            description: アクセストークン
            example: "accessToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/threadsPostRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadsPostResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response401"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response422"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/threads/{threadId}:
    get:
      tags:
        - Board
      summary: スレッド取得
      description: スレッド1件の詳細情報を取得する。
      parameters:
        - name: threadId
          in: path
          required: true
          schema:
            type: string
            description: スレッドID
            example: "1"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadsGetResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response400"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/threads/{threadId}/comments:
    post:
      tags:
        - Board
      summary: コメント作成
      description: コメントを作成（投稿）する。
      parameters:
        - name: threadId
          in: path
          required: true
          schema:
            type: string
            description: スレッドID
            example: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/threadsCommentsPostRequest"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadsCommentsPostResponse"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response422"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

  /v1/threads/categories:
    get:
      tags:
        - Board
      summary: スレッドカテゴリ一覧取得
      description: スレッドカテゴリの一覧を取得する。
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadsCategoriesListGetResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response500"

components:
  schemas:
    signupRequest:
      type: object
      description: ユーザー登録リクエスト
      required:
        - userId
        - password
        - userName
      properties:
        userId:
          type: string
          description: ユーザーID
          example: userId
        password:
          type: string
          description: パスワード
          example: password
        userName:
          type: string
          description: ニックネーム
          example: ニックネーム
        avatarId:
          type: string
          description: アバターID
          example: "1"

    userResponse:
      type: object
      description: ユーザーレスポンス
      required:
        - userId
        - userName
        - accessToken
        - createdAt
      properties:
        userId:
          type: string
          description: ユーザーID
          example: userId
        userName:
          type: string
          description: ニックネーム
          example: ニックネーム
        avatarId:
          type: string
          description: アバターID
          example: "1"
        accessToken:
          type: string
          description: アクセストークン
          example: "accessToken"
        createdAt:
          type: string
          description: 作成日時
          example: "2022-01-01T00:00:00+09:00"

    loginRequest:
      type: object
      description: ログインリクエスト
      required:
        - userId
        - password
      properties:
        userId:
          type: string
          description: ユーザーID
          example: userId
        password:
          type: string
          description: パスワード
          example: password

    articlesListGetResponse:
      type: object
      description: 記事一覧取得レスポンス
      properties:
        articles:
          type: array
          description: 記事一覧
          items:
            type: object
            description: 記事
            required:
              - articleId
              - articleTitle
              - userName
              - avatarId
              - createdAt
              - updatedAt
            properties:
              articleId:
                type: string
                description: 記事ID
                example: "1"
              articleTitle:
                type: string
                description: 記事名
                example: 記事名
              userName:
                type: string
                description: ニックネーム
                example: ニックネーム
              avatarId:
                type: string
                description: アバターID
                example: "1"
              createdAt:
                type: string
                description: 作成日時
                example: "2022-01-01T00:00:00+09:00"
              updatedAt:
                type: string
                description: 更新日時
                example: "2022-01-01T00:00:00+09:00"
        pagination:
          type: object
          description: ページネーション情報
          required:
            - page
            - perPage
            - total
          properties:
            page:
              type: integer
              description: ページ番号
              example: 1
            perPage:
              type: integer
              description: 1ページあたりの件数
              example: 20
            total:
              type: integer
              description: 総件数
              example: 99

    articlesPostRequest:
      type: object
      required:
        - articleTitle
        - content
      properties:
        articleTitle:
          type: string
          description: 記事タイトル
          example: 記事タイトル
        content:
          type: string
          description: 記事内容
          example: 記事内容

    articlesPostResponse:
      type: object
      required:
        - articleId
      properties:
        articleId:
          type: string
          description: 記事ID
          example: "1"

    articlesGetResponse:
      type: object
      description: 記事取得レスポンス
      required:
        - articleId
        - articleTitle
        - content
        - userName
        - avatarId
        - createdAt
        - updatedAt
      properties:
        articleId:
          type: string
          description: 記事ID
          example: "1"
        articleTitle:
          type: string
          description: 記事タイトル
          example: 記事タイトル
        content:
          type: string
          description: 記事内容
          example: 記事内容
        userName:
          type: string
          description: ニックネーム
          example: ニックネーム
        avatarId:
          type: string
          description: アバターID
          example: "1"
        createdAt:
          type: string
          description: 作成日時
          example: "2022-01-01T00:00:00+09:00"
        updatedAt:
          type: string
          description: 更新日時
          example: "2022-01-01T00:00:00+09:00"

    articlesPutRequest:
      type: object
      required:
        - articleId
        - articleTitle
        - content
      properties:
        articleId:
          type: string
          description: 記事ID
          example: "1"
        articleTitle:
          type: string
          description: 記事タイトル
          example: 記事タイトル
        content:
          type: string
          description: 記事内容
          example: 記事内容

    articlesPutResponse:
      type: object
      required:
        - articleId
      properties:
        articleId:
          type: string
          description: 記事ID
          example: "1"

    threadsListGetResponse:
      type: object
      description: スレッド一覧取得レスポンス
      properties:
        threads:
          type: array
          description: スレッド一覧
          items:
            type: object
            description: スレッド
            required:
              - threadId
              - threadTitle
              - categoryId
              - createdAt
              - updatedAt
            properties:
              threadId:
                type: string
                description: スレッドID
                example: "1"
              threadTitle:
                type: string
                description: スレッドタイトル
                example: スレッドタイトル
              categoryId:
                type: string
                description: カテゴリID
                example: "1"
              firstComment:
                type: string
                description: 最初のコメント
                example: "コメント"
              commentsCount:
                type: integer
                description: コメント数
                example: 1
              createdAt:
                type: string
                description: 作成日時
                example: "2022-01-01T00:00:00+09:00"
              updatedAt:
                type: string
                description: 更新日時
                example: "2022-01-01T00:00:00+09:00"
        pagination:
          type: object
          description: ページネーション情報
          required:
            - page
            - perPage
            - total
          properties:
            page:
              type: integer
              description: ページ番号
              example: 1
            perPage:
              type: integer
              description: 1ページあたりの件数
              example: 20
            total:
              type: integer
              description: 総件数
              example: 99

    threadsPostRequest:
      type: object
      description: スレッド作成リクエスト
      required:
        - threadTitle
        - categoryId
      properties:
        threadTitle:
          type: string
          description: スレッドタイトル
          example: スレッドタイトル
        categoryId:
          type: string
          description: カテゴリID
          example: "1"

    threadsPostResponse:
      type: object
      description: スレッド作成レスポンス
      required:
        - threadId
      properties:
        threadId:
          type: string
          description: スレッドID
          example: "1"

    threadsGetResponse:
      type: object
      description: スレッド取得レスポンス
      required:
        - threadId
        - threadTitle
        - categoryId
        - commentsCount
        - comments
        - createdAt
        - updatedAt
      properties:
        threadId:
          type: string
          description: スレッドID
          example: "1"
        threadTitle:
          type: string
          description: スレッドタイトル
          example: スレッドタイトル
        categoryId:
          type: string
          description: カテゴリID
          example: "1"
        commentsCount:
          type: integer
          description: コメント件数
          example: 100
        comments:
          type: array
          description: コメント一覧
          items:
            type: object
            description: コメント
            required:
              - commentId
              - commentTitle
              - createdAt
            properties:
              commentId:
                type: string
                description: コメントID
                example: "1"
              commentTitle:
                type: string
                description: コメントタイトル
                example: コメント
              userName:
                type: string
                description: ニックネーム（コメント投稿者）
                example: ニックネーム
              sessionId:
                type: string
                description: セッションID（コメント投稿者）
                example: "1111"
              createdAt:
                type: string
                description: 作成日時
                example: "2022-01-01T00:00:00+09:00"
        createdAt:
          type: string
          description: 作成日時
          example: "2022-01-01T00:00:00+09:00"
        updatedAt:
          type: string
          description: 更新日時
          example: "2022-01-01T00:00:00+09:00"

    threadsCommentsPostRequest:
      type: object
      description: コメント作成リクエスト
      required:
        - commentTitle
      properties:
        userId:
          type: string
          description: ユーザーID（コメント投稿者）
          example: "1"
        sessionId:
          type: string
          description: セッションID（コメント投稿者）
          example: "1111"
        commentTitle:
          type: string
          description: コメントタイトル
          example: コメント

    threadsCommentsPostResponse:
      type: object
      description: コメント作成レスポンス
      required:
        - commentId
        - commentTitle
        - createdAt
      properties:
        commentId:
          type: string
          description: コメントID
          example: "1"
        commentTitle:
          type: string
          description: コメントタイトル
          example: コメント
        userName:
          type: string
          description: ニックネーム（コメント投稿者）
          example: ニックネーム
        sessionId:
          type: string
          description: セッションID（コメント投稿者）
          example: "1111"
        createdAt:
          type: string
          description: 作成日時
          example: "2022-01-01T00:00:00+09:00"

    threadsCategoriesListGetResponse:
      type: object
      description: スレッドカテゴリ一覧取得レスポンス
      properties:
        categories:
          type: array
          description: カテゴリ一覧
          items:
            type: object
            description: カテゴリ
            required:
              - categoryId
              - categoryName
            properties:
              categoryId:
                type: string
                description: カテゴリID
                example: "1"
              categoryName:
                type: string
                description: カテゴリ名
                example: カテゴリ

    Response400:
      type: object
      description: 400エラーレスポンス
      properties:
        message:
          type: string
          description: メッセージ
          example: メッセージ

    Response401:
      type: object
      description: 401エラーレスポンス
      properties:
        message:
          type: string
          description: メッセージ
          example: メッセージ

    Response404:
      type: object
      description: 404エラーレスポンス
      properties:
        message:
          type: string
          description: メッセージ
          example: メッセージ

    Response422:
      type: object
      description: 422エラーレスポンス
      properties:
        message:
          type: string
          description: メッセージ
          example: メッセージ
        errors:
          type: object
          description: エラー内容
          properties:
            propertyName:
              type: string
              description: プロパティ名
              example: xxxxを入力してください。

    Response500:
      type: object
      description: 500エラーレスポンス
      properties:
        message:
          type: string
          description: メッセージ
          example: メッセージ
